<UserControl x:Class="TODOit.Resources.TaskBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TODOit.Resources"
             mc:Ignorable="d" 
             d:DesignHeight="64" d:DesignWidth="800" x:Name="TaskUC" 
             BorderThickness="0 0 0 1" BorderBrush="{DynamicResource Task.BorderBrush}">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="CompletedButtonStyle" x:Key="CompletedButtonStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border RenderOptions.EdgeMode="Aliased" x:Name="border" CornerRadius="27" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Property=Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Visibility="Hidden" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource CompletedButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource CompletedButton.MouseOver.BorderBrush}"/>-->
                                <Setter Property="Visibility" Value="Visible" TargetName="contentPresenter"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource CompletedButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource CompletedButton.Pressed.BorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource Window.Background}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource Window.Background}"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="contentPresenter"/>
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource CompletedButton.Checked.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource CompletedButton.Checked.BorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1 0 1 0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource Window.Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Task.Title.BorderBrush}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="61"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <CheckBox Height="56" x:Name="checkBox" Margin="5 0 0 0" Style="{DynamicResource CompletedButtonStyle}"  ToolTip="Complete" 
                  IsChecked="{Binding ElementName=TaskUC, Mode=TwoWay, Path=isCompleted, UpdateSourceTrigger=PropertyChanged}"
                  Background="Transparent" FontSize="36" Checked="checkBox_Checked" Unchecked="checkBox_Unchecked">&#x2713;</CheckBox>
        <TextBox Grid.Column="1" Style="{DynamicResource TextBoxStyle}" Margin="10 0 0 0"
                 FontSize="28" FontFamily="Segoe UI" x:Name="textBox" Text="{Binding ElementName=TaskUC, Mode=TwoWay, Path=Title, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Grid.Column="1" Width="20" Height="20" 
                VerticalAlignment="Top" HorizontalAlignment="Right" 
                Margin="5" x:Name="DeleteTaskButton"
                BorderThickness="0" Background="Transparent">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource WindowTitleBar.Button.MouseOver}" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource WindowTitleBar.Button.MouseDown}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
            <Path
                Stretch="None" Stroke="{DynamicResource WindowTitleBar.Path.Stroke}"
                StrokeThickness="1"
                RenderOptions.EdgeMode="Aliased"
                Data="M0,0 L8,8 M0,8 L8,0"
                VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Button>
    </Grid>
</UserControl>
